{"version":3,"sources":["utilities/integerDivision.js","utilities/move.js","components/Cell.js","components/Grid.js","components/App.js","store/actions/executeAndAdvance.js","utilities/stack.js","store/index.js","utilities/random.js","store/lenses.js","store/selectors/getCurrentInstruction.js","store/reducers/interpret.js","store/reducers/index.js","store/defaultState.js","index.js"],"names":["quotRem","dividend","divisor","number","rem","quot","divMod","Math","sign","div","mod","xLens","R","yLens","direction","dimensions","jumpSize","width","height","x","y","Error","connect","state","ownProps","value","grid","id","inFocus","position","editorFocus","isExecuting","executionPointer","gridDimensions","isCurrentInstruction","dispatch","inputElement","useRef","useEffect","current","focus","data-testid","className","onClick","type","onKeyDown","e","key","move","undefined","maxLength","ref","onChange","nextX","editCell","target","Array","fill","map","_","i","floor","console","log","Foward","iterateStack","Empty","this","Symbol","iterator","Object","freeze","__head","__tail","initialState","Stack","head","tail","stack","constructor","name","bind","empty","isEmpty","push","pop","num","result","fromArray","array","elem","among","args","random","length","gridLens","cellValue","runBinaryOpOnStack","op","a","b","rest","action","activeBridge","heading","instruction","getCurrentInstruction","stringMode","charCodeAt","charCode","Random","mode","String","fromCharCode","interpret","executionComplete","pendingUserInput","ReactDOM","render","store","createStore","rootReducer","defaultState","window","__REDUX_DEVTOOLS_EXTENSION__","document","getElementById"],"mappings":"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","file":"static/js/main.089516e5.chunk.js","sourcesContent":["const handleNegativeZero = number => number === -0 ? 0 : number;\n\nexport const quotRem = (dividend, divisor) => {\n  const rem = dividend % divisor;\n  const subtracted = dividend - rem;\n  const quot = handleNegativeZero(subtracted / divisor);\n  return { quot, rem };\n}\n\nexport const divMod = (dividend, divisor) => {\n  const { quot, rem } = quotRem(dividend, divisor);\n  if (Math.sign(rem) === -(Math.sign(divisor))) {\n    return { div: quot - 1, mod: rem + divisor };\n  } else {\n    return { div: quot, mod: rem };\n  }\n}\n\nexport const rem = (dividend, divisor) => quotRem(dividend, divisor).rem;\nexport const quot = (dividend, divisor) => quotRem(dividend, divisor).quot;\nexport const div = (dividend, divisor) => divMod(dividend, divisor).div;\nexport const mod = (dividend, divisor) => divMod(dividend, divisor).mod;\n","import * as R from 'ramda'\nimport { mod } from './integerDivision'\n\n// type position = { x: int, y: int }\nconst xLens = R.lensProp('x');\nconst yLens = R.lensProp('y');\n\n// type direction = 'Up' | 'Right' | 'Down' | 'Left'\n// type dimensions = { width: int, height: int }\nexport default ({ direction, dimensions, jumpSize = 1 }) => {\n  const { width, height } = dimensions;\n  switch(direction) {\n    case \"Right\":\n      return R.over(xLens, x => mod(x + jumpSize, width));\n      case \"Down\":\n      return R.over(yLens, y => mod(y + jumpSize, height));\n    case \"Left\":\n      return R.over(xLens, x => mod(x - jumpSize, width));\n    case \"Up\":\n      return R.over(yLens, y => mod(y - jumpSize, height));\n    default:\n      throw new Error('Unrecognized direction!')\n  }\n}\n","import React, { useRef, useEffect } from 'react'\nimport './Cell.css'\nimport { connect } from 'react-redux'\nimport * as R from 'ramda'\nimport move from '../utilities/move'\n\nconst Cell = ({ position, value, inFocus, isCurrentInstruction, gridDimensions, dispatch }) => {\n  const inputElement = useRef(null);\n  const { x, y } = position;\n\n  useEffect(() => {\n    if (inFocus) inputElement.current.focus();\n  }, [inFocus]);\n\n  const editCell = value => {\n    dispatch({ type: 'EDIT_CELL', position, value });\n    if (value === '') return;\n\n    const { width, height } = gridDimensions;\n    const nextX = (x + 1) % width;\n    const nextY = nextX === 0 ? (y + 1) % height : y;\n    dispatch({\n      type: 'SET_EDITOR_FOCUS',\n      position: { x: nextX, y: nextY },\n    });\n  }\n\n  const onKeyDown = key => {\n    const direction = R.match(/^Arrow(.*)$/, key)[1];\n    if (direction) {\n      dispatch({\n        type: 'SET_EDITOR_FOCUS',\n        position: move({\n          direction,\n          dimensions: gridDimensions,\n        })(position),\n      })\n    } else if (\n      key === 'Backspace' &&\n      ( value === '' ||\n        value === null ||\n        value === undefined)\n      ) {\n      dispatch({\n        type: 'SET_EDITOR_FOCUS',\n        position: move({\n          direction: 'Left',\n          dimensions: gridDimensions,\n        })(position),\n      });\n    }\n  }\n\n  return (\n    <div\n      data-testid={`cell-div-${x}-${y}`}\n      className={isCurrentInstruction ? 'highlighted cell': 'cell'}\n      onClick={() => dispatch({type: 'SET_EDITOR_FOCUS', position})}\n      onKeyDown={e => onKeyDown(e.key)}\n    >\n      <input\n        data-testid={`cell-input-${x}-${y}`}\n        className=\"input\"\n        type=\"text\"\n        maxLength=\"1\"\n        ref={inputElement}\n        value={value}\n        onChange={e => editCell(e.target.value)}\n      />\n    </div>\n  )\n}\n\nconst mapStateToProps = (state, ownProps) => ({\n  value: state.grid[ownProps.id],\n  inFocus: R.equals(ownProps.position, state.editorFocus),\n  isExecuting: R.equals(ownProps.position, state.executionPointer),\n  gridDimensions: state.dimensions,\n});\n\nexport default connect(mapStateToProps)(Cell);\n","import React, { useEffect } from \"react\"\nimport \"./Grid.css\"\nimport Cell from \"./Cell\"\nimport { connect } from 'react-redux';\n\nconst Grid = ({dispatch}) => {\n  useEffect(() => {\n    dispatch({ type: \"SET_GRID_DIMENSIONS\", height: 9, width: 9});\n  }, [dispatch]);\n\n  return (\n    <div className=\"grid\">\n      {Array(81)\n        .fill()\n        .map((_, i) => {\n          const y = Math.floor(i / 9);\n          const x = i % 9;\n          return (\n            <Cell\n              key={`cell-${i}`}\n              position={{x, y}}\n            />\n          )\n        })\n      }\n    </div>\n  )\n};\n\nexport default connect()(Grid)\n","import React from 'react';\nimport './App.css';\nimport Grid from './Grid';\nimport Foward from '../store/actions/executeAndAdvance'\nimport { connect } from 'react-redux'\n\nconst App = ({ dispatch }) => {\n  return (\n    <div className=\"app\">\n      <div className=\"header\">\n        Welcome to Befunge!\n        <div\n          className=\"button\"\n          onClick={() => console.log(\"Undo: To Be implemented.\")}\n        >\n          {\"<\"}\n        </div>\n        <div\n          className=\"button\"\n          onClick={() => Foward(dispatch)}\n        >\n          {\">\"}\n        </div>\n      </div>\n      <Grid />\n    </div>\n  );\n}\n\nexport default connect()(App);\n","export default (dispatch) => {\n  dispatch({ type: 'EXECUTE' })\n  dispatch({ type: 'ADVANCE' });\n}\n","import * as R from 'ramda'\n\nclass Empty {\n  constructor() {\n    this[Symbol.iterator] = function* () {}\n    return Object.freeze(this);\n  }\n}\n\nfunction* iterateStack() {\n  yield this.__head;\n  yield* this.__tail;\n}\n\nconst isStack = stack =>\n  R.any(\n    constructor => constructor === stack.constructor.name,\n    [Empty.name, Stack.name]\n  );\n\nclass Stack {\n  constructor(head, tail) {\n    if (!isStack(tail)) {\n      throw new Error('Tail must be a stack.')\n    }\n    this.__head = head;\n    this.__tail = tail;\n    this[Symbol.iterator] = iterateStack.bind(this);\n    return Object.freeze(this);\n  }\n}\n\nconst empty = new Empty();\n\nconst isEmpty = stack => stack.constructor.name === Empty.name;\n\nconst push = R.curry((head, tail) => new Stack(head, tail));\n\nconst pop = R.curry((num, stack) => {\n  const result = [];\n  for (let i = 0; i < num; i++) {\n    if (isEmpty(stack)) {\n      result.push(0);\n    }\n    else {\n      result.push(stack.__head);\n      stack = stack.__tail;\n    }\n  }\n  result.push(stack);\n  return result;\n});\n\nconst fromArray = array =>\n  R.reduce(\n    (stack, elem) => push(elem, stack),\n    empty,\n    R.reverse(array)\n  );\n\nexport default {\n  empty,\n  isEmpty,\n  push,\n  pop,\n  fromArray,\n}\n","import { createStore } from 'redux';\nimport * as R from 'ramda'\n\nimport rootReducer from './reducers';\nimport defaultState from './defaultState';\n\nexport default (initialState) => createStore(\n  rootReducer,\n  R.mergeRight(\n    R.mergeRight(defaultState, initialState),\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__())\n);\n","export const among = (...args) => args[Math.floor(Math.random() * args.length)];\n","import * as R from 'ramda'\n\nexport const gridLens = ({ x, y }) => R.lensPath(['grid', `${x}-${y}`]);\n","import { gridLens } from '../lenses'\nimport * as R from 'ramda'\n\nexport default state => {\n  const { executionPointer } = state;\n  const cellValue = R.view(gridLens(executionPointer), state);\n  if (cellValue === undefined || cellValue === '') {\n    return ' ';\n  }\n  return cellValue;\n}\n","import * as R from 'ramda'\nimport Stack from '../../utilities/stack'\nimport * as Random from '../../utilities/random'\nimport { gridLens } from '../lenses'\nimport { quot, rem } from '../../utilities/integerDivision'\nimport getCurrentInstruction from '../selectors/getCurrentInstruction'\n\nexport default (\n  state,\n  instruction = getCurrentInstruction(state)\n) => {\n  if (typeof instruction !== 'string') {\n    throw new Error(\"Instruction is not a string.\");\n  }\n  if (instruction.length !== 1) {\n    throw new Error(\"Instruction should be a single character.\")\n  }\n  if (state.stringMode && instruction !== '\"') {\n    return R.over(R.lensProp('stack'), Stack.push(instruction.charCodeAt(0)), state);\n  }\n\n  const charCode = instruction.charCodeAt(0);\n  const number = charCode - '0'.charCodeAt(0);\n\n  if (number >= 0 && number < 10) {\n    return R.over(R.lensProp('stack'), Stack.push(number), state);\n  }\n\n  switch (instruction) {\n    case '+':\n      return runBinaryOpOnStack((a, b) => a + b)(state);\n    case '-':\n      return runBinaryOpOnStack((a, b) => b - a)(state);\n    case '*':\n      return runBinaryOpOnStack((a, b) => a * b)(state);\n    case '/':\n      return runBinaryOpOnStack((a, b) => quot(b, a))(state);\n    case '%':\n      return runBinaryOpOnStack((a, b) => rem(b, a))(state);\n    case '!':\n      return R.over(R.lensPath(['stack', 'head']), x => x === 0 ? 1 : 0, state);\n    case '`':\n      return runBinaryOpOnStack((a, b) => b > a ? 1 : 0)(state);\n    case '>':\n      return R.set(R.lensProp('heading'), 'Right', state);\n    case '<':\n      return R.set(R.lensProp('heading'), 'Left', state);\n    case '^':\n      return R.set(R.lensProp('heading'), 'Up', state);\n    case 'V':\n      return R.set(R.lensProp('heading'), 'Down', state);\n    case '?':\n      return R.set(\n        R.lensProp('heading'),\n        Random.among('Right', 'Left', 'Up', 'Down'),\n        state\n      );\n    case '_':\n      return R.pipe(\n        R.over(R.lensProp('stack'), stack => stack.tail),\n        R.set(R.lensProp('heading'), state.stack.head ? 'Left' : 'Right'),\n      )(state);\n    case '|':\n      return R.pipe(\n        R.over(R.lensProp('stack'), stack => stack.tail),\n        R.set(R.lensProp('heading'), state.stack.head ? 'Up' : 'Down'),\n      )(state);\n    case '\"':\n      return R.over(R.lensProp('stringMode'), mode => !mode, state);\n    case ':':\n      return R.over(\n        R.lensProp('stack'),\n        stack => Stack.push(stack.head, stack),\n        state\n      );\n    case '\\\\':\n      return R.over(\n        R.lensProp('stack'),\n        stack => {\n          const [ a, b, rest ] = Stack.pop(2, stack);\n          return Stack.push(b, Stack.push(a, rest));\n        },\n        state\n      );\n    case '$':\n      return R.set(\n        R.lensProp('stack'),\n        stack => stack.tail,\n        state\n      );\n    case '.':\n      return R.pipe(\n        R.over(R.lensProp('stack'), stack => stack.tail),\n        R.set(\n          R.lensProp('console'),\n          console => console + state.stack.head + ' '\n        )\n      )(state);\n    case ',':\n      return R.pipe(\n        R.over(R.lensProp('stack'), stack => stack.tail),\n        R.set(\n          R.lensProp('console'),\n          console => console + String.fromCharCode(state.stack.head)\n        )\n      )(state);\n    case '#':\n      return R.set(\n        R.lensProp('activeBridge'),\n        true,\n        state\n      );\n    case 'g':\n      return R.over(\n        R.lensProp('stack'),\n        stack => {\n          const [ y, x, rest ] = Stack.pop(2, stack);\n          const value = R.view(gridLens({x, y}), state);\n          return Stack.push(value.charCodeAt(0), rest);\n        },\n        state\n      );\n    case 'p':\n      const [ y, x, value, rest ] = Stack.pop(3, state.stack);\n      return R.pipe(\n        R.set(gridLens({x, y}), String.fromCharCode(value)),\n        R.set(R.lensProp('stack'), rest)\n      )(state);\n    case '&':\n      return R.set(R.lensProp('pendingUserInput'), 'Number', state);\n    case '~':\n      return R.set(R.lensProp('pendingUserInput'), 'Character', state);\n    case '@':\n      return R.set(R.lensProp('executionComplete'), true, state);\n    case ' ':\n      return state;\n    default:\n      throw new Error(`Unrecognized instruction: '${instruction}'.`);\n  }\n}\n\nconst runBinaryOpOnStack = (op) =>\n  R.over(R.lensProp('stack'), stack => {\n    const [ a, b, rest ] = Stack.pop(2, stack);\n    const head = op(a, b);\n    return Stack.push(head, rest);\n  });\n","import * as R from 'ramda'\nimport interpret from './interpret';\nimport move from '../../utilities/move';\nimport { gridLens } from '../lenses';\n\nexport default (state, action) => {\n\n  switch(action.type) {\n    case \"SET_GRID_DIMENSIONS\": {\n      const { height, width } = action;\n      return R.set(R.lensProp('dimensions'), { height, width }, state);\n    }\n    case \"EDIT_CELL\": {\n      const { position, value} = action;\n      return R.set(gridLens(position), value, state);\n    }\n    case \"SET_EDITOR_FOCUS\": {\n      const { x, y } = action.position;\n      const { dimensions: { width, height }} = state;\n\n      if (x >= 0 && x < width && y >= 0 && y < height) {\n        return R.set(R.lensProp('editorFocus'), action.position, state);\n      }\n      return state;\n    }\n    case \"ADVANCE\": {\n      const jumpSize = state.activeBridge ? 2 : 1;\n      return R.pipe(\n        R.set(R.lensProp('activeBridge'), false),\n        R.over(\n          R.lensProp('executionPointer'),\n          move({\n            jumpSize,\n            direction: state.heading,\n            dimensions: state.dimensions\n          })\n        )\n      )\n    }\n    case \"EXECUTE\": {\n      return interpret(state);\n    }\n    default:\n      return state;\n  }\n}\n","import Stack from '../utilities/stack';\n\nexport default {\n  editorFocus: { x: 0, y: 0 },\n  executionPointer: { x: 0, y: 0 },\n  // type heading = 'Up' | 'Right' | 'Down' | 'Left'\n  heading: 'Right',\n  // grid: { [cellId: string]: instruction }\n  // where cell ids are of the form \"{i}-{j}\"\n  grid: {},\n  dimensions: { height: 0, width: 0},\n  // stack<int>\n  stack: Stack.empty,\n  console: '',\n  activeBridge: false,\n  executionComplete: false,\n  stringMode: false,\n  // false | 'Number' | 'Character'\n  pendingUserInput: false\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n\nimport App from './components/App';\nimport newStore from './store';\n\nimport './index.css';\n\nReactDOM.render(\n  <Provider store={newStore()} >\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}